name: crowdin
summary: The Crowdin CLI
description: |
  Crowdin CLI is a command line tool that allows you to manage and synchronize your localization resources with your Crowdin project. Using CLI, you can:

  - automate the process of updating your source files in your Crowdin project
  - download translations from Crowdin and automatically save them in the correct locations
  - upload all your existing translations to Crowdin in minutes
  - integrate Crowdin with GIT, SVN, Mercurial, and other software

  ## Features

  - Interactive generation of a configuration file
  - Upload source files and existing translations to a Crowdin project
  - Download latest translations from Crowdin to the specified place
  - Show translation and proofreading progress for a project
  - Manage source strings in a Crowdin project
  - Manage glossaries and translation memories
  - Show a list of source files and branches in the current project
  - List information about the source files or translations that match the wild-card pattern contained in the current project
  - Multithreading for source and translation files upload
  - Bash/Zsh command completion
  - Process indicators, loading states, emojis
  - HTTP Proxy support including authorization
  - To explore more features, visit the [Wiki](https://github.com/crowdin/crowdin-cli/wiki), [KB article](https://support.crowdin.com/cli-tool/) and [Configuration File article](https://support.crowdin.com/configuration-file/).

  ## Running

  Use the following method to run the app:

  ```console
  crowdin
  ```

  ## Configuration

  Crowdin CLI uses a YAML configuration file that contains a description of the resources to manage: files to be uploaded into Crowdin and the locations of the corresponding translations.

  To use Crowdin CLI, you should first generate your configuration file and then run the tool. By default, Crowdin CLI looks for a configuration file named *crowdin.yaml* or *crowdin.yml* (so you don’t have to specify the file name unless it’s different from *crowdin.yaml*).

  To create the configuration file run the following command:

  ```console
  crowdin init
  ```

  When calling Crowdin CLI in terminal make sure you are in your project root directory. Otherwise, you need to specify a configuration file path using  `--config` option:

  ```console
  crowdin upload sources --config /path/to/your/config/file
  ```

  Sample configuration file:

  ```yaml
  "project_id": "12"
  "api_token": "54e01--your-personal-token--2724a"
  "base_path": "."
  "base_url": "https://api.crowdin.com" # https://{organization-name}.crowdin.com

  "preserve_hierarchy": true

  "files": [
    {
      "source" : "/resources/**/*",
      "translation" : "/%two_letters_code%/%original_file_name%"
    }
  ]
  ```

  :memo: For more information how to configure Crowdin CLI, check <a href="https://support.crowdin.com/configuration-file/" target="_blank">Configuration File</a> article.

  ## Usage

  Once the configuration file is created, you can use Crowdin CLI to manage your localization resources and automate file synchronization.

  ### General Commands

  To display help information:

  ```console
  crowdin -h
  ```

  ```console
  crowdin <command> -h
  ```

  To generate skeleton configuration file:

  ```console
  crowdin init
  ```

  To check configuration file for general mistakes:

  ```console
  crowdin lint
  ```

  To display a list of files uploaded to Crowdin:

  ```console
  crowdin list project
  ```

  ### Uploading Resources

  To upload source files to Crowdin:

  ```console
  crowdin upload sources
  ```

  To upload single file without a configuration:

  ```console
  crowdin upload sources \
      -s path/to/your/file \
      -t file/export/pattern \
      -T personal-access-token \
      -i project-id \
      --base-url https://api.crowdin.com
  ```

  Use <a href="https://support.crowdin.com/configuration-file/#placeholders" target="_blank">placeholders</a> to put appropriate variables.

  To display a list of files that will be uploaded to Crowdin:

  ```console
  crowdin upload sources --dryrun
  ```

  To upload existing translations to Crowdin (translations will be synchronized):

  ```console
  crowdin upload translations
  ```

  To show detailed information about the `upload` command:

  ```console
  crowdin upload --help
  ```

  ## Downloading Translations

  To download the latest translations from Crowdin:

  ```console
  crowdin download
  ```

  To download the latest translations for the specific language (<a href="https://support.crowdin.com/api/language-codes/" target="_blank">language codes</a>):

  ```console
  crowdin download -l {language_code}
  ```

  To display a list of the latest translations from Crowdin:

  ```console
  crowdin download --dryrun
  ```

  To show detailed information about the `download` command:

  ```console
  crowdin download --help
  ```

  ## Versions Management

  There is no need to run specific command to create version branches if you use synchronization tool. The version branch is created automatically during the files upload.

  To upload source files to the specified version branch:

  ```console
  crowdin upload sources -b {branch_name}
  ```

  To upload translations to the specified version branch:

  ```console
  crowdin upload translations -b {branch_name}
  ```

  To download translations from the specified version branch:

  ```console
  crowdin download -b {branch_name}
  ```

  ## Advanced Usage

  Visit the [Crowdin CLI Wiki](https://github.com/crowdin/crowdin-cli/wiki) to read more about CLI advanced features (like pseudo-localization, translations downloading to the specified file, etc.)

adopt-info: crowdin
grade: stable
confinement: strict  # classic
base: core18
license: MIT
